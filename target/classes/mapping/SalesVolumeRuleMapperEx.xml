<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace可以写类的全限定名，这样做的好处是
　　sqlSession.insert(Student.class.getName()+".addStudent");
-->
<mapper namespace="com.leaderment.sales.mapper.mybatis.SalesVolumeRuleMapperEx">


    <select id="findByItemKeyId" resultType="com.leaderment.sales.pojo.SalesVolumeRule">
        SELECT
            svr.sales_volume_rule_id	as salesVolumeRuleId,
            t1.item_key_id	as itemKeyId,
            t1.item_key_ratio as itemKeyRatio,
            svr.min_sales_volume as minSalesVolume,
            svr.max_sales_volume as maxSalesVolume
        FROM
            bison.sales_volume_rule svr,
            (select
            sales_volume_rule_id,
            item_key_id,
            item_key_ratio
            from
            bison.sales_volume_rule_item_key_rel
            where item_key_id = #{itemKeyId})  t1
        where
            svr.sales_volume_rule_id in (t1.sales_volume_rule_id)
    </select>

    <select id="findByItemKeyIdAndSales"  resultType="com.leaderment.sales.pojo.SalesVolumeRule">
        SELECT
            sales_volume_rule_id	as salesVolumeRuleId,
            item_key_id	        as itemKeyId
        FROM
            bison.sales_volume_rule
        where
            item_key_id = #{itemKeyId}

        <if test="lastUnitsOrderSum == 0">
            and (min_sales_volume <![CDATA[<=]]>  #{lastUnitsOrderSum}  )
        </if>

        <if test="lastUnitsOrderSum != 0">
            and (min_sales_volume <![CDATA[<]]>  #{lastUnitsOrderSum} and #{lastUnitsOrderSum}  <![CDATA[<=]]> max_sales_volume )
        </if>

    </select>

    <select id="findByUpdateSalesVolumeRuleVOItemKeyId" resultType="com.leaderment.sales.pojo.vo.UpdateSalesVolumeRuleVO">
        SELECT
            ik.item_key_id				as itemKeyId,
            ik.item_key					as itemKey,
            ik.type,
            svr.sales_volume_rule_id	as salesVolumeRuleId,
            svr.min_sales_volume		as minSalesVolume,
            svr.max_sales_volume		as maxSalesVolume,
            svr.rationality
        FROM
            bison.sales_volume_rule svr
        LEFT JOIN
            bison.item_key ik ON svr.item_key_id = ik.item_key_id
            where ik.item_key_id = #{itemKeyId}
    </select>

    <update id="updateRationalityById" parameterType="com.leaderment.sales.pojo.SalesVolumeRule">
        update  bison.sales_volume_rule set rationality = #{rationality} where sales_volume_rule_id =  #{salesVolumeRuleId}
    </update>

    <delete id="deleteBySalesVolumeRuleIdAndItemKeyId">
        delete from bison.sales_volume_rule where sales_volume_rule_id = #{salesVolumeRuleId}
    </delete>

    <select id="findSalesVolumeRuleByItemKeyId" resultType="com.leaderment.sales.pojo.SalesVolumeRule">
        SELECT
            svr.sales_volume_rule_id	as salesVolumeRuleId,
            svr.item_key_id	            as itemKeyId,
            svr.min_sales_volume		as minSalesVolume,
            svr.max_sales_volume		as maxSalesVolume,
            svr.rationality
        FROM
            bison.sales_volume_rule svr
        where
            svr.item_key_id = #{itemKeyId}

    </select>





</mapper>